name: APK Beta Distribution

on:
  push:
    branches:
      - build

jobs:
  beta-distribution:
    runs-on: ubuntu-latest
    name: Beta Distribution

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@master
      with:
        node-version: '16.x'
    # - uses: c-hive/gha-yarn-cache@v1

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: npm-${{ hashFiles('yarn.lock') }}
        restore-keys: npm-


    - name: Install node modules
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        yarn install

    - name: Generate env.prod.js
      run: |
        cd app/config && ls
        echo "module.exports = {" > env.prod.js
        echo "  API_URL: '${{ secrets.DEFAULT_API_URL }}'," >> env.prod.js
        echo "}" >> env.prod.js

    - name: Cache Gradle Wrapper
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}

    - name: Cache Gradle Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-caches-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-caches-

    - name: Make Gradlew Executable
      run: cd android && chmod +x ./gradlew

    # - name: clean Gradle
    #   run: cd android && ./gradlew clean

    - name: Build Android App Bundle
      run: |
        cd android && ./gradlew app:assembleRelease --no-daemon

    # - name: Set Artifact Name
    #   run: echo "::set-output name=artifact_name::$(find android/app/build/outputs/apk/release/ -name '*.apk' -printf '%f\n')"

    - name: Set Artifact Name
      id: set_name
      run: echo "ARTIFACT_NAME=$(find android/app/build/outputs/apk/release/ -name '*.apk' -printf '%f\n')" >> $GITHUB_ENV

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        # name: app-release.apk
        # name: ${{ steps.set_name.outputs.artifact_name }}
        name: ${{ env.ARTIFACT_NAME }}
        path: android/app/build/outputs/apk/release/

    - name: Distribute app via Firebase App Distribution
      env:
          firebaseToken: ${{ secrets.FIREBASE_TOKEN }}
          firebaseGroups: ${{ secrets.FIREBASE_GROUPS }}
          firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
          notes: ${{ github.event.head_commit.message }}
      run: |
        yarn global add firebase-tools
        export PATH="$(yarn global bin):$PATH"
        encoded_notes=$(curl -Gso /dev/null -w %{url_effective} --data-urlencode "${notes}" "" | cut -c 3-)
        echo $encoded_notes
        firebase \
          appdistribution:distribute android/app/build/outputs/apk/release/${{ env.ARTIFACT_NAME }} \
          --app $firebaseAppId \
          --release-notes "$notes" \
          --groups "$firebaseGroups" \
          --token "$firebaseToken"